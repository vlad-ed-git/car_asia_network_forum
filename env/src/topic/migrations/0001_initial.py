# Generated by Django 3.1.2 on 2020-10-17 15:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import topic.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TopicPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=127)),
                ('body', models.TextField(max_length=500)),
                ('category', models.CharField(choices=[('CA', 'Car Accessories'), ('CP', 'Car Performance Parts'), ('CC', 'Continental Cars'), ('CEI', 'Cosmetic Enhancement Items'), ('GCD', 'General Car Discussion'), ('ICE', 'In Car Entertainment'), ('JC', 'Japanese Cars'), ('MR', 'Maintenance & Repairs'), ('TR', 'Tyres & Rims'), ('O', 'NON CAR-RELATED')], default='O', max_length=5)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to=topic.models.upload_location)),
                ('extra_image_one', models.ImageField(blank=True, null=True, upload_to=topic.models.upload_location)),
                ('extra_image_two', models.ImageField(blank=True, null=True, upload_to=topic.models.upload_location)),
                ('extra_image_three', models.ImageField(blank=True, null=True, upload_to=topic.models.upload_location)),
                ('date_published', models.DateTimeField(auto_now_add=True, verbose_name='date published')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('is_approved', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dislikes', models.ManyToManyField(related_name='topic_post_dislikes', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(related_name='topic_post_likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
